# Generated by Django 4.2.5 on 2024-02-06 22:51

# Standard Library
import uuid

# Third Party
import django.core.validators
import django.db.models.deletion
from django.db import (
    migrations,
    models,
)

# First Party
import movies.models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.RunSQL("CREATE SCHEMA IF NOT EXISTS content"),
        migrations.CreateModel(
            name="Filmwork",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Title")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                ("creation_date", models.DateField(verbose_name="Creation date")),
                (
                    "rating",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            movies.models.validate_negative_rating,
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Rating",
                    ),
                ),
                (
                    "type",
                    models.TextField(
                        choices=[("Movie", "Movie"), ("TV Show", "Tv Show")],
                        verbose_name="Type",
                    ),
                ),
                (
                    "file_path",
                    models.CharField(max_length=512, verbose_name="file_path"),
                ),
            ],
            options={
                "verbose_name": "Film",
                "verbose_name_plural": "Films",
                "db_table": 'content"."film_work',
            },
        ),
        migrations.CreateModel(
            name="Genre",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Name")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
            ],
            options={
                "verbose_name": "Genre",
                "verbose_name_plural": "Genres",
                "db_table": 'content"."genre',
            },
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "full_name",
                    models.CharField(max_length=255, verbose_name="full name"),
                ),
            ],
            options={
                "verbose_name": "Actor",
                "verbose_name_plural": "Actors",
                "db_table": 'content"."person',
            },
        ),
        migrations.CreateModel(
            name="PersonFilmWork",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("role", models.TextField(verbose_name="Role")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "film_work_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="movies.filmwork",
                    ),
                ),
                (
                    "person_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="movies.person",
                    ),
                ),
            ],
            options={
                "db_table": 'content"."person_film_work',
            },
        ),
        migrations.CreateModel(
            name="GenreFilmWork",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "film_work_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="movies.filmwork",
                    ),
                ),
                (
                    "genre_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="movies.genre",
                    ),
                ),
            ],
            options={
                "db_table": 'content"."genre_film_work',
            },
        ),
        migrations.AddField(
            model_name="filmwork",
            name="genre_id",
            field=models.ManyToManyField(
                through="movies.GenreFilmWork",
                to="movies.genre",
            ),
        ),
        migrations.AddField(
            model_name="filmwork",
            name="person_id",
            field=models.ManyToManyField(
                through="movies.PersonFilmWork",
                to="movies.person",
            ),
        ),
        migrations.AddIndex(
            model_name="personfilmwork",
            index=models.Index(
                fields=["film_work_id", "person_id", "role"],
                name="film_work_person_role_idx",
            ),
        ),
        migrations.AddConstraint(
            model_name="personfilmwork",
            constraint=models.UniqueConstraint(
                fields=("film_work_id", "person_id", "role"),
                name="film_work_person_role_ctr",
            ),
        ),
        migrations.AddIndex(
            model_name="genrefilmwork",
            index=models.Index(
                fields=["film_work_id", "genre_id"],
                name="film_work_genre_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="filmwork",
            index=models.Index(
                fields=["creation_date"],
                name="film_work_creation_date_idx",
            ),
        ),
    ]

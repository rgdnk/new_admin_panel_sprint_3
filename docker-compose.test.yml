version: '3'
services:
  db:
    image: postgres:16
    container_name: db
    volumes:
      - "postgres_data:/var/lib/postgresql/data/"
      - "./postgresql.conf:/var/lib/data/postgresql.conf"
    env_file:
      - db.env
    ports:
      - "5432:5432"
    environment:
      - PGUSER=app
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 60s
      retries: 5
  
  backend:
    image: gunicorn
    container_name: backend
    build:
      context: .
      dockerfile: movies_admin/Dockerfile
      target: django-api
    command: ["gunicorn", "-c", "gunicorn.conf.py"]
    env_file:
      - backend.env
    restart: always
    volumes:
      - "media:/opt/app/media"
      - "./gunicorn.conf.py:/opt/app/gunicorn.conf.py"
    depends_on:
      db:
        condition: service_healthy

  nginx:
    image: nginx
    container_name: nginx
    build:
      context: .
      dockerfile: movies_admin/Dockerfile
      target: front
    depends_on:
      backend:
        condition: service_started
    ports:
      - 8080:80
    links:
      - backend
    volumes:
      - "./nginx.conf:/etc/nginx/nginx.conf:ro"
      - "./configs:/etc/nginx/conf.d:ro"


volumes:
  media:
  postgres_data:

